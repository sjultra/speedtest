# This is a basic workflow to help you get started with Actions

name: Build and push docker image

# Controls when the workflow will run
on:
  # commented to not be triggered on each commit
  #   # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: ["main"]
  #   pull_request:
  #     branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    runs-on: ubuntu-latest
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Installs Go binary
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: ~1.16

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout code
        uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # - name: Login to Docker Hub
      #   uses: docker/login-action@v2
      #   with:
      #     username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}

      # - name: Login to GitHub Container Registry
      #   uses: docker/login-action@v2
      #   with:
      #     registry: ghcr.io
      #     username: ${{ github.repository_owner }}
      #     password: ${{ secrets.GH_TOKEN }}

      # Install Go project dependencies
      - name: Download Go modules
        run: go mod tidy

      # Build the Go project
      - name: Build
        run: go build -v ./...

      # Test the Go project
      - name: Test
        run: go test ./...

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        # env:
        #   GITHUB_TOKEN: ${{ secrets.GH_PAT }}
        #   FURY_TOKEN: ${{ secrets.FURY_TOKEN }}
        #   GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}
        #   TWITTER_CONSUMER_KEY: ${{ secrets.TWITTER_CONSUMER_KEY }}
        #   TWITTER_CONSUMER_SECRET: ${{ secrets.TWITTER_CONSUMER_SECRET }}
        #   TWITTER_ACCESS_TOKEN: ${{ secrets.TWITTER_ACCESS_TOKEN }}
        #   TWITTER_ACCESS_TOKEN_SECRET: ${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }}

      - name: List files
        run: ls dist/

      # - name: Build and push
      #   uses: docker/build-push-action@v4
      #   with:
      #     context: .
      #     file: ./docker/Dockerfile
      #     push: true
      #     tags: |
      #       ${{ secrets.DOCKERHUB_USERNAME }}/speedtest:latest
      #       ghcr.io/${{ github.repository_owner }}/speedtest:latest

      # # install and authenticate jfrog/artifactory CLI
      # - uses: jfrog/setup-jfrog-cli@v3.0.0
      # - name: Verify artifactory server connection
      #   run: jf rt ping

      # - name: Cleanup artifactory
      #   run: |
      #     jf rt del "speedtest-helm/*"

      # - name: Distribute source to artifactory
      #   run: |
      #     cd ./helm
      #     tar -cvzf speedtest.tgz ./service/
      #     jf rt upload speedtest.tgz speedtest-helm/
      #     cd -
